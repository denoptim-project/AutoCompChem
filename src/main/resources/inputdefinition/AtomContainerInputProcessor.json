[
  {
    "key": "INFILE",
    "casedKey": "inFile",
    "type": "<String> [<int> ...] [<String>]",
    "doc": "Shortcut for 'INPUTGEOMETRIESFILE'. The pathname to the file containing the geometries of the chemical system/s given as input. Optionally, a set of integers can be used to select which geometries from a multigeometry input (0-based idex). Optionally, the string 'last' can be used to retain only the last geometry from a multigeometry input."
  },
  {
    "key": "INPUTGEOMETRIESFILE",
    "casedKey": "inputGeometriesFile",
    "type": "<String> [<int> ...] [<String>]",
    "doc": "The pathname to the file containing the geometries of the chemical system/s given as input. Optionally, a set of integers can be used to select which geometries from a multigeometry input (0-based idex). Optionally, the string 'last' can be used to retain only the last geometry from a multigeometry input."
  },
  {
    "key": "INPUTGEOMETRIES",
    "casedKey": "inputGeometries",
    "type": "List<IAtomContainer>",
    "doc": "Parameter holding the list of CDK definition of chemical systems to process."
  },
  {
    "key": "MULTIGEOMMODE",
    "casedKey": "multiGeomMode",
    "type": "<String>",
    "doc": "Defines how to interprete an input file containing multiple geometries. Possible values are IndependentJobs (to work on each geometry independently, e.g., creating an input file for each geometry) or AllInOneJob (to work with all geometries in the same job, e.g., placeing all geometries in a single input file)."
  },
  {
    "key": "USEGEOMATINDEX",
    "casedKey": "useGeomAtIndex",
    "type": "<int>",
    "doc": "Specifies which geometry to use by the index of that item in the given list of geometries. If this parameter is given, the value of MULTIGEOMMODE is ignored."
  },
  {
    "key": "SETPROPERTIES",
    "casedKey": "setProperties",
    "type": "<String>",
    "doc": "Defines on or more properties to be set to any atom container received as input in any way. Properties are key:value pairs, but the value may be empty. The key must respect the rules for property names in molecular structure files (e.g., spaces and other special symbols are replaced by '_'). The first occurrence of ':' separates the key from the value (e.g., this_is_a_key: this is a value that may constai spaces, :, and any other character). Each property is defined in a single line (i.e., newline character separated two independent definitions of properties). Peroperties are to be defines file where to save the results. \nThe content of the value may be a placeholder for values to be computed by any job in the AutoCompChem workflow. The placeholder's syntax is:   '<command>(<pointer_to_job>,<pointer_to_data>)', where:\n  --> <command> is either 'getACCJobsData', for fetching the value at the very beginning of the job with the 'setProperties' parameter, or 'getACCJobsResults', for fetching the value after the execution of that job, thus having the possibility to read data produced also by the same job that is asked to 'setProperties'.\n  --> <pointer_to_job> is a string that must start with '#' and indicats how to navigate the job tree to locate a target job, i.e., the job from which we want to extract data. For example, string '#-2.1.0' indicated that the target job if the first step (as defined by the last integer, i.e., '0' in '#-2.1.0') in a container job that is the second step (defined by the second-last integer, i.e., '1' in '#-2.1.0') in a container job that contains the container of the job where the 'getACCJobsData' call is made (i.e., the '-2' indicated to move to the container job twice). Hence '#0' indicated the very same job that is asked to 'setProperties'.\n  --> <pointer_to_data> is any comma-separated list of data names or indexes identifying the data to extract from the target job. For example, '1stName,2,2ndName' indicates a data structure where a data collector named '1stName' contains data reachable by the name/index '2' (could be a map where '2' is the key, or a list containing at least 3 items, or could be a data named '2'), which contains data named '2ndName'. The value of the latter named data is the value returned by 'getACCJobsData'.\nNote that the entire syntax of the 'getACCJobsData' call is replaces by the value fetched by this call. For example, assuming the value fetched is '123' the string 'the value foo:bar=getACCJobsData(#-1.0,foo,bar).' becomes 'the value foo:bar=123.'."
  },
  {
    "key": "OUTFILE",
    "casedKey": "outFile",
    "type": "<String>",
    "doc": "The pathname to the file where to save the results."
  },
  {
    "key": "OUTFORMAT",
    "casedKey": "outFormat",
    "type": "<String>",
    "doc": "Format for output file. By default, the most appropriated file format is chosen for the specific kind of output. Otherwise, when the output is one or more molecular geometries, acceptable values for this parameters are 'SDF', 'XYZ', and 'ORCATRAJECTORY'."
  }
]
